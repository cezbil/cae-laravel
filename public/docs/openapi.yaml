openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/events:
    post:
      summary: ''
      operationId: postApiEvents
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-04-22T13:47:26'
                revision:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: rboie
                dutyCode:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: thhtw
                checkInLocalTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                checkInZuluTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                checkOutLocalTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                checkOutZuluTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                activityType:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: qr
                activityRemark:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jni
                fromStation:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: pbrwg
                stdLocalTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                stdZuluTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                toStation:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: axhvn
                staLocalTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                staZuluTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                aircraftOrHotel:
                  type: string
                  description: 'Must not be greater than 50 characters.'
                  example: vg
                blockHours:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                flightTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                nightTime:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                duration:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example: '13:47'
                extraDetails:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nni
              required:
                - date
                - activityType
  /api/events/import:
    post:
      summary: ''
      operationId: postApiEventsImport
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                html_file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 5120 kilobytes.'
              required:
                - html_file
  /api/events/range:
    get:
      summary: ''
      operationId: getApiEventsRange
      description: ''
      parameters:
        -
          in: query
          name: startDate
          description: 'The start date'
          example: '2024-04-22T13:43:11'
          required: true
          schema:
            type: string
            description: 'The start date'
            example: '2024-04-22T13:43:11'
        -
          in: query
          name: endDate
          description: 'The start date'
          example: '2024-04-22T13:43:11'
          required: true
          schema:
            type: string
            description: 'The start date'
            example: '2024-04-22T13:43:11'
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: 'not logged in'
                properties:
                  errors:
                    type: string
                    example: 'not logged in'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-04-22T13:47:26'
                endDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-04-22T13:47:26'
              required:
                - startDate
                - endDate
  /api/events/flights:
    get:
      summary: ''
      operationId: getApiEventsFlights
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: 'not logged in'
                properties:
                  errors:
                    type: string
                    example: 'not logged in'
      tags:
        - Endpoints
  /api/events/flights/location:
    get:
      summary: ''
      operationId: getApiEventsFlightsLocation
      description: ''
      parameters:
        -
          in: query
          name: startLocation
          description: 'The start location'
          example: non
          required: true
          schema:
            type: string
            description: 'The start location'
            example: non
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: 'not logged in'
                properties:
                  errors:
                    type: string
                    example: 'not logged in'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startLocation:
                  type: string
                  description: ''
                  example: officia
              required:
                - startLocation
  /api/events/sby:
    get:
      summary: ''
      operationId: getApiEventsSby
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: 'not logged in'
                properties:
                  errors:
                    type: string
                    example: 'not logged in'
      tags:
        - Endpoints
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: non
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: hermiston.lemuel@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'h&/N;;'
              required:
                - name
                - email
                - password
      security: []
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: schaefer.brendan@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '>xfd~r\83Ck$&Dqhom_'
              required:
                - email
                - password
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: User
    description: "\nfor user register"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and Creating new user with Register, and then Loging in with login endpoint'
security:
  -
    default: []
